{"version":3,"sources":["stores/UserStore.js","InputField.js","SubmitButton.js","LoginForm.js","App.js","reportWebVitals.js","index.js"],"names":["extendObservable","this","loading","isLoggedIn","username","InputField","className","type","props","placeholder","value","onChange","e","target","React","Component","SubmitButton","disabled","onClick","text","LoginForm","state","password","buttonDisabled","property","val","trim","length","setState","fetch","method","headers","body","JSON","stringify","res","json","result","success","UserStore","resetForm","alert","msg","console","log","setInputValue","doLogin","App","loh","disable","doLogout","observer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5498cd41.chunk.js","sourcesContent":["import { extendObservable} from 'mobx';\r\n\r\n/**\r\n *  UserStore\r\n */\r\nclass UserStore {\r\n    constructor(){\r\n        extendObservable(this, {\r\n\r\n            loading: true,\r\n            isLoggedIn: false,\r\n            username: ''\r\n\r\n        })\r\n    }\r\n}\r\n\r\nexport default new UserStore();\r\n","import React, { Component } from 'react';\r\n\r\nclass InputField extends React.Component {\r\n\r\n  render() {\r\n\r\n    return (\r\n    <div className=\"inputField\">\r\n        <input\r\n          className='input'\r\n          type={this.props.type}\r\n          placeholder={this.props.placeholder}\r\n          value={this.props.value}\r\n          onChange={(e) => this.props.onChange(e.target.value)}\r\n        \r\n\r\n      />\r\n    </div>\r\n  );\r\n}}\r\n\r\nexport default InputField;\r\n","import React, { Component } from 'react';\r\n\r\nclass SubmitButton extends React.Component {\r\n\r\n  render() {\r\n\r\n    return (\r\n    <div className=\"submitButton\">\r\n        <button\r\n            className='btn'\r\n            disabled={this.props.disabled}\r\n            onClick={()=> this.props.onClick()}\r\n        >\r\n          {this.props.text}\r\n        </button>\r\n    </div>\r\n  );\r\n}}\r\n\r\nexport default SubmitButton;\r\n","import React, { Component } from 'react';\r\nimport InputField from './InputField'\r\nimport SubmitButton from './SubmitButton';\r\nimport UserStore from './stores/UserStore'\r\n\r\nclass LoginForm extends React.Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      username:'',\r\n      password:'',\r\n      buttonDisabled: false\r\n    }\r\n  }\r\n\r\n  setInputValue(property, val){\r\n    val = val.trim();\r\n    if (val.length> 12){\r\n      return;\r\n    }\r\n    this.setState({\r\n      [property]:val\r\n    })\r\n  }\r\n\r\n  resetForm(){\r\n    this.setState({\r\n      username:'',\r\n      password:'',\r\n      buttonDisabled: false\r\n    })\r\n  }\r\n\r\n  async doLogin(){\r\n    if(!this.state.username){\r\n      return;\r\n    }\r\n    if(!this.state.password){\r\n      return;\r\n  }\r\n  this.setState({\r\n    buttonDisabled: true\r\n  })\r\n  try{\r\n    let res = await fetch('/login',{\r\n      method:'post',\r\n      headers:{\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({\r\n      username:this.state.username,\r\n      password: this.state.password\r\n    })\r\n    });\r\n    let result = await res.json();\r\n    if (result && result.success){\r\n      UserStore.isLoggedIn = true;\r\n      UserStore.username = result.username;\r\n    }\r\n    else if (result && result.success === false) {\r\n      this.resetForm();\r\n      alert(result.msg);\r\n    }\r\n\r\n  }\r\n  catch(e){\r\n    console.log(e);\r\n    this.resetForm();\r\n  }}\r\n  render() {\r\n\r\n    return (\r\n    <div className=\"loginForm\">\r\n        Log in\r\n        <InputField \r\n          type='text'\r\n          placeholder='Username'\r\n          value={this.state.username ? this.state.username:''}\r\n          onChange={(val) => this.setInputValue('username',val)}\r\n        />\r\n        <InputField \r\n          type='password'\r\n          placeholder='Password'\r\n          value={this.state.password ? this.state.password:''}\r\n          onChange={(val) => this.setInputValue('password',val)}\r\n        />\r\n        <SubmitButton\r\n          text='Login'\r\n          disabled={this.state.buttonDisabled}\r\n          onClick={()=> this.doLogin()}\r\n          />\r\n    </div>\r\n  );\r\n}}\r\n\r\nexport default LoginForm;\r\n","import React, { Component } from 'react';\nimport { observer } from 'mobx-react';\nimport UserStore            from './stores/UserStore';\nimport LoginForm            from './LoginForm'\n//import InputField           from './InputField'\nimport SubmitButton         from './SubmitButton'\nimport './App.css';\n\nclass App extends React.Component {\n  async componentDidMount() {\n\n    try {\n\n      let res = await fetch('/isLoggedIn',{\n        method:'post',\n        headers:{\n          'Accept': 'application/json',\n          'Content-type': 'application/json'\n        }\n      });\n\n      let result = await res.json();\n\n      if(result && result.success) {\n        UserStore.loading = false;\n        UserStore.isLoggedIn = true;\n        UserStore.username = result.username;\n      }\n      else {\n        UserStore.loading = false;\n        UserStore.isLoggedIn = false;\n      }\n    }\n\n    catch(e) {\n      UserStore.loading = false;\n      UserStore.isLoggedIn = false;\n    }\n  }\n\n  //LOGOUT COMPONENT\n  async doLogout() {\n\n    try {\n\n      let res = await fetch('/logout',{\n        method:'post',\n        headers:{\n          'Accept': 'application/json',\n          'Content-type': 'application/json'\n        }\n      });\n\n      let result = await res.json();\n\n      if(result && result.success) {\n        UserStore.isLoggedIn = false;\n        UserStore.username ='';\n      }\n    }\n\n    catch(e) {\n      console.loh(e);\n    }\n  }\n\n  render() {\n\n    if (UserStore.loading){\n      return (\n        <div className=\"app\">\n        <div className='container'>\n          Loading, please wait...\n        </div>\n    </div>\n      )\n    }\n\n    else {\n\n      if (UserStore.isLoggedIn){\n        return (\n          <div className=\"app\">\n          <div className='container'>\n            Welcome {UserStore.username}\n\n            <SubmitButton\n              text={'Log out'}\n              disable={false}\n              onClick={()=> this.doLogout()}\n            />\n          </div>\n       </div>\n        );\n\n      }\n    return (\n    <div className=\"app\">\n        <div className='container'>\n            <LoginForm />\n        </div>\n    </div>\n  );\n}}}\n\nexport default observer(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}